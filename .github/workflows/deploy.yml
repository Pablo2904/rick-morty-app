name: CI/CD Pipeline

on:
  push:
    branches:
      - release-*
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node Modules (Infrastructure)
        uses: actions/cache@v3
        with:
          path: infra/node_modules
          key: ${{ runner.os }}-infra-node-modules-${{ hashFiles('infra/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-infra-node-modules-

      - name: Install Dependencies (Infrastructure)
        run: npm install --prefix infra

      - name: Deploy Infrastructure
        run: |
          cd infra
          npx cdk deploy --require-approval never --context environment=${{ github.ref_name == 'main' && 'production' || 'staging' }}
          OUTPUTS=$(npx cdk deploy --require-approval never --context environment=${{ github.ref_name == 'main' && 'production' || 'staging' }})
          CLOUDFRONT_ID=$(echo "$OUTPUTS" | grep 'CloudFrontID' | awk '{print $NF}')
          CLOUDFRONT_URL=$(echo "$OUTPUTS" | grep 'CloudFrontURL' | awk '{print $NF}')
          echo "CLOUDFRONT_ID=$CLOUDFRONT_ID" >> $GITHUB_ENV
          echo "CLOUDFRONT_URL=$CLOUDFRONT_URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Cache Node Modules (React App)
        uses: actions/cache@v3
        with:
          path: rick-morty-app-client/node_modules
          key: ${{ runner.os }}-client-node-modules-${{ hashFiles('rick-morty-app-client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-node-modules-
      - name: Install Dependencies (React App)
        run: npm install --prefix rick-morty-app-client

      - name: Build React App
        run: npm run build --prefix rick-morty-app-client

      - name: Deploy React Build to S3
        run: |
          aws s3 sync rick-morty-app-client/build s3://${{ github.ref_name == 'main' && 'rick-morty-bucket-production' || 'rick-morty-bucket-staging' }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 6: Invalidate CloudFront Cache
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 7: Output CloudFront URL
      - name: Output CloudFront URL
        run: |
          echo "CloudFront URL: $CLOUDFRONT_URL"
