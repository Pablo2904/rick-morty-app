name: CI/CD Pipeline

on:
  push:
    branches:
      - release-*
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Dynamiczne Å›rodowisko na podstawie brancha
    environment: ${{ github.ref_name == 'main' && 'production' || startsWith(github.ref_name, 'release-') && 'staging' || 'development' }}

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Build React App
      - name: Build React App
        run: |
          npm install --prefix rick-morty-app-client
          npm run build --prefix rick-morty-app-client

      # Step 4: Deploy React Build to S3
      - name: Deploy React Build to S3
        run: |
          aws s3 sync rick-morty-app-client/build s3://${{ secrets.BUCKET_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 5: Deploy Infrastructure
      - name: Deploy Infrastructure
        run: |
          cd infra
          npm install
          npx cdk deploy --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 6: Output CloudFront URL
      - name: Output CloudFront URL
        run: |
          CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
            --stack-name InfraStack \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontURL'].OutputValue" \
            --output text)
          echo "CloudFront URL: $CLOUDFRONT_URL"
          echo "CLOUDFRONT_URL=$CLOUDFRONT_URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
