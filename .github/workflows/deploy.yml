name: CI/CD Pipeline

on:
  push:
    branches:
      - release-*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 2.1: Cache Node.js Dependencies
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            rick-morty-app-client/node_modules
            infra/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 3: Install Dependencies
      - name: Install Dependencies (Client)
        run: npm install --prefix rick-morty-app-client

      # Step 3.1: Install Dependencies (Infrastructure)
      - name: Install Dependencies (Infra)
        run: npm install --prefix infra

      # Step 4: Run Tests
      - name: Run Tests
        run: npm test --prefix rick-morty-app-client

      # Step 5: Build the React App
      - name: Build React App
        run: npm run build --prefix rick-morty-app-client

      # Step 6: Deploy using AWS CDK
      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd infra
          npx cdk deploy --require-approval never

      # Step 6.1: Save Deployment Logs
      - name: Save Deployment Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: deployment-logs
          path: infra/cdk.out
